#mysql配置
#spring.datasource.url=jdbc:mysql://127.0.0.1/sys?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=true
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

##########################  druid配置   ##########################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/jd_demo?useSSL=true&characterEncoding=utf-8&serverTimezone=UTC

spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.maxActive=20
spring.datasource.druid.maxWait=60000
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.druid.filters=stat,wall,log4j
spring.datasource.druid.connectionProperties=druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1,192.168.163.1
spring.datasource.druid.stat-view-servlet.deny=192.168.1.73
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=123456
##########################  druid配置   ##########################

#jpa设置
spring.jpa.database=mysql
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

spring.mail.host=smtp.126.com
spring.mail.username=cloudfavorites@126.com
spring.mail.password=ritesxxx123
spring.mail.port=465

spring.mail.default-encoding=UTF-8

mail.fromMail.addr=cloudfavorites@126.com

#\u767B\u5F55\u670D\u52A1\u5668\u662F\u5426\u9700\u8981\u8BA4\u8BC1
spring.mail.properties.mail.smtp.auth=true
#SSL\u8BC1\u4E66Socket\u5DE5\u5382
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
#\u4F7F\u7528SMTPS\u534F\u8BAE465\u7AEF\u53E3
spring.mail.properties.mail.smtp.socketFactory.port=465

#\u663E\u793A\u5728\u6536\u4EF6\u4EBA\u90AE\u7BB1\u91CC\u9762\u7684\u53D1\u4EF6\u4EBA\u540D\u79F0
spring.mail.self.username=\u4E91\u6536\u85CF
#忘记密码
mail.subject.forgotpassword=\u5BC6\u7801\u91CD\u7F6E\u90AE\u4EF6
mail.content.forgotpassword=\u8BF7\u70B9\u51FB\u4EE5\u4E0B\u5730\u5740:<br /><a href='{0}'>\u91CD\u7F6E\u5BC6\u7801</a>
#激活邮箱 Ascii/Native编码互转
mail.subject.active=\u6ce8\u518c\u90ae\u7bb1\u9a8c\u8bc1\u000a
mail.content.active=\u8BF7\u70B9\u51FB\u4EE5\u4E0B\u5730\u5740:<br /><a href='{0}'>\u6fc0\u6d3b\u94fe\u63a5</a>



#####   mail setting end #####
favorites.base.path=http://localhost:8080/
forgotpassword.url=http://localhost:8080/home/newPassword
activeuser.url=http://localhost:8080/home/activeuserEmail

# elasticsearch#
# elasticsearch集群名称，默认的是elasticsearch
# Elasticsearch 配置文件，即 config/elasticsearch.yml。这里我们需要在配置中增加以下配置
# 为了允许 elasticsearch-head 运行时的跨域：
## allow origin
#http.cors.enabled: true
#http.cors.allow-origin: "*"
spring.data.elasticsearch.cluster-name=elasticsearch
#节点的地址 注意api模式下端口号是9300，千万不要写成9200
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
#是否开启本地存储
spring.data.elasticsearch.repositories.enable=true
##出现错误时, 直接抛出异常,转入自定义错误页面
#spring.mvc.throw-exception-if-no-handler-found=true
##关闭工程中的资源文件建立映射
##spring.resources.add-mappings=false

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000

logging.level.root=TARCE
